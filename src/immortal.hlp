#HELPS

78 ADVANCE~
Syntax: advance <character> <level>

ADVANCE sets a character's level to the specified value.  It is the   
only way to create new immortal characters within the game.  ADVANCE  
may also be used to demote characters.
~
78 ALLOW BAN PERMBAN~
Syntax: allow   <site>
        ban     <site> <newbies|all|permit>
        ban     
                
BAN <site> prohibits players from that site from logging in.  BAN with
no arguments lists the banned sites.  ALLOW <site> removes a site from
the ban list, if the remover is of equal or higher level than the banner.

A site may have all players, new players, or non-permitted players (set
by editing the player file) banned, by changing the argument after the site.
*s may be used to ban either by suffix (*.edu), prefix (labmac*), or
content (*andrews*), but be careful not to accidently lock out too many
sites with a wildcard.  Bans do not save unless the permban command is used.
~
78 AT~
Syntax: at <location> <command>

At executes the given command (which may have arguments) at the given
location.  The location may be specified as a vnum, as the name of   
a mobile, or as the name of an object.

At works by temporarily moving you to that location, executing the
command, and then moving you back (if the command didn't change your
location).
~
0 BUILDER SUPREME CREATOR IMPLEMENTOR IMMORTAL IMM~

'Immortal' (often, simply, 'imm') refers to players who have reached
the highest attainable levels in the game. They are the ones who run
the mud, and you can get in contact with them for any problems or   
questions you have. Here is a breakdown of what the levels mean, and
what they do:

`#BUILDER`7 - These Imms are responsible for creating and modifying 
the areas, items, mobiles that you come in contact with. They are
very restricted, and do not deal in issues of conflict like OOL and
things like cheating.

`8SUPREME`7 - This is the next level of Imms, and usually are also
builders. However, they have been given added responsibilities and
are trusted to handle some player conflict.
        
`^CREATOR`7 - This is the highest level of Imm, and usually are also
builders, but mainly handle more difficult issues. These are the
slave drivers of building.

`1IMPLEMENTOR`7 - They run the mud. They are responsible for dictating
policies, rules, and punishement. Also, this level consists of coders 
who modify the code. If you have any issues this is the last level to   
go to. Their word is the law.
~
78 CLONE~
Syntax:  
  clone obj <object>
  clone mob <mobile>
  clone <name>
  
The clone command duplicates an object or mobile.  The level of item or mobile
that may be cloned depends on your level.  The target object or mob must be in
the same room as you, or in your posession.  Strung and set information is
preserved by clone, as well as any spell effects and container contents or
mobile inventory, except for items which are too high for you to clone.   
Strung extended descriptions on objects are not kept, however.
~
78 DENY~
Syntax: deny <name>

Deny locks a character out of a game permanently, rendering their character
name unusable.  It may only be removed by editing the file, for this reason
freeze is usually preferred.
~
78 DISCONNECT~
Syntax: disconnect <name>

Disconnect breaks a player's link to the game, dumping them back to the telnet
prompt.  This is a non-lethal way of getting rid of spammers and annoying
players.
~
78 ECHO GECHO PECHO~
Syntax: echo  <message>
        gecho <message>
        pecho <character> <message>
        
These commands all perform similar functions.  Echo sends the message to
all characters in the same room as the user, with no indication of who sent
it.  Gecho does the same for all players connected to the game, and pecho  
sends the message to the player specified as the target.  Any higher-level 
god will see a prompt in front of your message, informing him or her that it
is an echo.
~
78 EQMAXES~
Here's a list of maximums and formulas for figuring it out:

`7Average Damage:               `&item level + 40 / 2           `^100`7 MAX
`7Hitpoints/Mana:               `&char level * 1.333 (rounded)  `^100`7 MAX
`7Movement:                     `&char level * 1.666 (rounded)  `^125`7 MAX

`$Strength/Dexterity/Hitroll/Damroll/Saves/AC Chart`4:

`71-4           `^1`7
5-9             `^2`7
10-14           `^3`7
15-24           `^4`7
25-34           `^5`7
35-44           `^6`7
45-54           `^7`7
55-64           `^8`7
65-74           `^9`7
75+             `^10`7

`!*`7 Use "`&avedam #`7" to give possibilities for v1 and v2 values in oedit.
`!*`7 AC is calculated by the "Max Points Allowed" divded up any way you choose. IE: Level
110 item has 140 points and could have 35/35/35/35 or 50/50/40/0. Anyway you want it.
`!*`7 Perm Spells cost 25 points to add.
`!*`7 Quest EQ is allowed 20% over Max Points. IE: 75 Stock is 140 points, so 168 allowed
for the quest equipment.
`!*`7 Legend EQ is assumed as though it was level 150. So 180 points for stock, and 216
for Legend Quest.
~
78 FREEZE~
Syntax: freeze <name>

FREEZE <character> is a toggle which prevents a character from issuing any
commands at all. It can be removed from within the game, so freezing a
troublemaker is usually a better option than they deny command.
~
78 FORCE~
Syntax: force <character> <command>
Syntax: force all <command>

FORCE forces one character to execute a command, except of course delete.

Below level 57 (Deity) force can only be used on mobiles, and force all is
unavailable.  You also cannot 'force orc murder hugo', for example.

FORCE 'all' forces all player characters to execute a command.
This is typically used for 'force all save'.
~
78 GOTO~
Syntax: goto <location>

Goto takes you to a location.  The location may be specified as a vnum,
as the name of a mobile, or as the name of an object.

You may not Goto a room if it is PRIVATE and has two (or more) characters
already present, or if it is SOLITARY and has one (or more) characters   
already present. Some other rooms are barred to players below a certain  
god level.

Implementors can use the violate command to get into private rooms.
~
78 HELP_PARSE~
Ok, this will be notish in context basically here's the syntax:
``$g = group cp
``$c = skills/spell cp
``$l = skill/spell level

Follow these with skill/group inbetween '' then class name between
two ''.

Examples
``$g'enhancement''mage' would show $g'bash''mage'
``$c'bash''warrior' would show $c'bash''warrior'
``$l'bash''warrior' would show $l'bash''warriior'

Notice ignore the `` it's just so that the system doesn't parse it.
~
78 HOLYLIGHT INVIS WIZINVIS~
Syntax: holylight
        wiznvis <level>
        
Holylight is a toggle that allows you to see (almost) every character and
mobile in the game.  With holy light, you can see what's in the game more
easily.  Without holy light, you can see what mortal players see.

Wizinvis takes a level argument, and will mke you invisible to all players of
a lower level than your invisibility level.  It defaults to the maximum
(your level) if no argument is given.  Wizi 60 characters are totally  
invisible.
~
78 IMOTD~
`$Welcome Immortal`4!`7

`!*`1 Please do not interact on a game level with the players, this is to
ensure a balanced game, and a true outcome of the current setup.
`!*`1 You are allowed to play a mortal, we advise against having this
character logged in when you do so. But if you do, you may not use any
abilities of this character to the mortals advantage. (Restore/BonusTime)
`!*`1 You are not allowed to quest with your own mortal in a quest you run!

`7[`&H`7i`8t `&Re`7tu`8rn `&t`7o `&Co`7nti`8nue`7]
~
78 INCOGNITO~
Toggling your incognito status will hide your presence from people outside the
room you are in, but leave you visible to those who are with you.  It takes   
a level argument similar to wizinvis, people at that level or higher can see  
you regarless of location.
~
78 LOAD~
Syntax: load mob <vnum>
        load obj <vnum> <level>
        
The load command is used to load new objects or mobiles (use clone to
duplicate strung items and mobs).  The vnums can be found with the vnum
command, or by stat'ing an existing mob or object.

Load puts objects in inventory if they can be carried, otherwise they are
put in the room.  Mobiles are always put into the same room as the god. Old
format objects must be given a level argument to determine their power, new
format objects have a preset level that cannot be changed without set.
(see also clone, vnum, stat)
~
78 MEMORY~
Syntax: memory

Memory reports the size of your mud.

The 'Mobs' and 'Objs' lines report the number of types of mobiles and objects,
not the number of instances currently in the game.

The 'Strings' line shows memory used by area-file strings.  These strings have
a maximum limit, which is also shown.

The 'Perms' line shows permanently allocated memory blocks.  There is no limit
on the number and size of these blocks.
~
78 NOCHANNEL NOEMOTE NOSHOUT NOTELL~
Syntax: nochannel <character>
        noemote   <character>
        noshout   <character>
        notell    <character>
        
Noemote, noshout, and notell are used to muffle other characters, by
preventing them from emoting, shouting, and telling, respectively.  
Characters who are noshout'ed or no'telled will also not receive those
forms of communication.

The nochannel command is similar, but more drastic. It prevents the victim
from using any of the channels (gossip, cgossip, Q/A, music) on the game. 
Nochannels usually result from swearing or spamming on public channels.   
~
78 PARDON~
Syntax: pardon <character> killer
        pardon <character> thief 
        
Pardon pardons a player for their crimes.  Don't pardon a player unless you
are sure they deserve it.  Being killed by Hassan acts as an automatic
pardon.
~
78 PURGE~
Syntax: purge
        purge <character>
        
Purge is used to clean up the world.  Purge with no arguments removes all the
NPC's and objects in the current room.  Purge with an argument purges one
character from anywhere in the world.

Purge will not get rid of PC's, or objects or mobiles with a NOPURGE flag
set (i.e. the pit, the fountain, shopkeepers, Hassan).  Mobiles may be   
purged if they are called directly by name.
~
81 QEDIT~
This wiz command is used to edit the items on the Quest lists throughout the mud.
Caution should be used with this command, do not flood the mud with too much
of a good thing!

Syntax: qedit    -  Puts you right into editing mode
        keyword  -  Changes the keyword used to buy the item
        show     -  Shows information on the current item
        showname -  Shows how the item looks while on the list
        cost     -  Cost of the item
        vnum     -  Vnum of the item
        level    -  Level the item is usable at
        create   -  Make a new entry
        list     -  List all the items on the list
        special  -  Only used for practices and the like, always type "special no"
        delete   -  Delete an item from the list

`!*Important note:`& These commands, if typed with no argument, will clear the
                   indicated field.`*
~
78 REBOOT SHUTDOWN~
Syntax:7 reboot
        shutdown
        
Reboot shuts down the server.  When the normal 'startup' script is used
to control the server, a delay of fifteen seconds will ensue (to allow 
old connections to die), followed by a reboot.

Shutdown shuts down the server and prevents the normal 'startup' script
from restarting it.
~
78 RESTORE~
Syntax: restore <character>
        restore room
        restore all 
        
Restore restores full hit points, mana points, and movement points to the
target character.  It also heals poison, plague, and blindness.

Restore room (or restore with no argument) performs a restore on every player
in the room, restore all does the same for all connected players. Restore all
is only usable by creators and implementors.  Restore should be used sparingly
or not at all.
~
78 SET~
Syntax: set mob   <mobile> <field> <value>
        set obj   <object> <field> <value>
        set room  <number> <field> <value>
        set skill <char>   <name>  <rating>
        set skill <char>   all     <rating>
        
The set command is used to change the numerical values of the various data
structures. Type set <class> without an argument to see a listing of options.
Set skill all (pc's only) will set all the character's skills to the value   
given.  Use string to change the strings on an object or mobile.
(see also string, stat)
~
78 SLAY~
Syntax: slay <character>

Slay kills a character in cold blood, no saving throw.  Best not to use this
command on players if you enjoy being a god.
~
78 SOCKETS~
Syntax: sockets
        sockets <name>
        
SOCKETS reports all of the visible users connected to the server, including
users in the process of logging in.  The two numbers inside brackets are the
channel number and the 'connected' state.  The 'connected' states are listed in
merc.h: 0 is CON_PLAYING; non-zero values are various states of logging in.

The optional name argument shows the site of a player, or optional can be used
to identify switched gods (i.e. socket orc shows the name of anyone switched  
into an orc).
~
78 STRING~
Syntax: string obj <field> <string>
        string mob <field> <string>
        
The string command changes the various strings associated with an object or
mobile.  A full list of fields can be viewed by typing string obj or string
mob.  Sorry, multi-line strings are not yet supported.
~
78 TESTASMO~
This is a test of the help parser.
Acid Blast
CP $c'acid blast''mage'   Lvl $l'acid blast''mage'
CP $g'enhancement''mage'
~
78 TRANSFER TELEPORT~
Syntax: transfer <character>
        transfer all
        transfer <character> <location>
        transfer all         <location>
        transfer room <location>
        
Transfer transfers the target character, or ALL player characters,
to your current location (default) or to a specified location. Trans all
should almost never be used, as 100 players popping into one room can have
horrible effects on slow links. Teleport is a synonym for transfer.  

The exception to this is "transfer room", which transfers all mortals in a 
room with an immortal from that room, to the specified location.
~
78 TRUST~
Syntax: trust <character> <level>

TRUST sets a character's trust to the specified level.  This is similar to  
advancing the character for accessing immortal commands, but has no effect
on combat strength, et cetera.  You can give more trust to mortal (or
immortal) characters to give them access to more power without messing up
the character.  You can also restrict a player's trust to less than their
natural level.  
 
A trust of 0 means to use the character's natural level again.
~
-1 WIZLIST JOBS IMMORTALS~
`@Division         Immortal        Email                      Level`7   
`2----------------------------------------------------------------------`7
  CODERS     -     Asmodeus        `&asmodeus@austin.rr.com         `^81`7
             -     Diem            `&gorbo@shaw.ca                  `^81`7
   MIA       -     Cammaedros      `&sot_cammaedros@hotmail.com     `^81`7
   SoT2      -     Surei           `&acebo@cableone.net             `^81`7
`2----------------------------------------------------------------------`7
 Headbuilder -     Demandred       `&huntmaster_00@yahoo.com        `^80`7
  Helpfiles  -     Lynn            `&lynn__sot@hotmail.com          `^81`7
`2----------------------------------------------------------------------`7
 GuideLeader -     Balwen          `&balwen_sot@hotmail.com         `^80`7
  Guide      -     Sera            `&sera@wotmania.com              `^80`7
  Builder    -     Tonia           `&littlewhitelilly@hotmail.com   `^78`7
  Guide      -     Lute            `&lute1217@hotmail.com           `^78`7
  Guide      -     Allen           `&chris@sage.n-connect.net       `^80`7 
 Guildmaster -     Dreyus          `&dreyus84@hotmail.com           `^80`7 
`2----------------------------------------------------------------------`7

CODERS   -  Responsible for bug fixes, new commands, and the balancing of
            classes, including new class skills, and the implementation of
            any and or all new code.
CREATORS  - Responsible for supervising BUILDERS, also responsible for the
            final building products, and the organization of the creation
            process. They are also responsible for PvP problems and rule
            breakers.
Builder   - Creates and modifies areas on the mud with the goal of a full
            Wheel of Time map.
Guide     - Immortal GL of Newbie helper guild, which helps new players
            learn and adapt to the mud.
Helpfiles - Updates and keeps help files current.
Website   - Makes all changes and updates for the SoT web page.

Also see HELP GL for current mortal leaders.
~
78 WIZLOCK NEWLOCK~
Syntax: wizlock
        newlock
        
Wizlock and newlock both block login attempts to ROM. Wizlock locks
out all non-gods (i.e. level less than 51), except for link-dead players who
are returning.  Newlock only locks out new character generation, typically  
used for preventing a spammer from returning.  Wizlocking should be avoided,
and newlocking should be accompanied by mail or a note to the imps.

A god must be at least Supreme level to wizlock the game.
~
78 SMOTE~
Syntax: smote <action>

Smote works exactly like pmote, except you must place your name somewhere in
the string, and it will show that string to everyone in the room.
~
78 VNUM~
Syntax: vnum <name>
        vnum <obj or mob> <name>
        vnum skill <name>

Vnum finds all objects and mobiles with a particular name, and prints out
the results.  Use vnum obj or vnum mob to limit the search.  This vnum is
very useful for loading. Vnum skill returns the skill number (for set) and
the slot number (for making new zones) of a skill name.
(see also load)
~
78 STAT~
Syntax: stat <name>
        stat mob  <name>
        stat obj  <name>
        stat room <number>

The stat command gives you detailed information on an object, mobile, or room
within the game.  Without a class argument, the command will return a object
(if found), a mobile (if no object exists, but a mobile does), or a room
(if a number is  given).  Stat room with no argument stats the room you are
standing in.  Stat can be used to find room vnums for goto.
(see also goto, transfer)
~
78 MWHERE~
Syntax: mwhere <name>

Mwhere shows you the locations of all mobiles with a particular name.
~
78 PEACE~
Syntax: peace

Peace causes all characters in a room to stop fighting. It also strips the
AGGRESSIVE bit from mobiles.
~
78 POOFIN POOFOUT~
Syntax: poofin  <message>
Syntax: pooffout <message>

The standard messages for goto are 'arrives in a swirling mist' and
'leaves in a swirling mist'.  You can replace these messages with messages of
your own choosing using the poofin and poofout commands.  These messages
must include your name somewhere in the string.

Poofin and poofout only show to characters who can see you.
(see also goto)
~
78 PROTECT~
Syntax: protect <character>

Protect is used to protect a character from unwanted snooping.  Removing
protected status from a character WILL be seen by that character.
~
78 LOG SNOOP~
Syntax: log   <character>
        log   all
        snoop <character>
        
Log <character> causes all of a character's commands to be logged into
the server's log file.  Like Freeze, it is a permanent character toggle.
Logs may only be used by creators and implementors, and should be accompanied
by mail to the implementors.

Certain commands (Password) are protected against log.  Conversely, certain
commands (especially immortal commands) are always logged.

Log all logs all character commands.  It is a server-wide toggle; it does not
persist across reboots. Please do not use this unless you tell the imps.

Snoop shows you a copy of all the input and output going to a character.
The character must have an open channel.  You may snoop more than one   
character at a time. Try to respect privacy.

Snoop yourself to cancel all outstanding snoops.
~
78 SWITCH RETURN~
Syntax: switch <character>
        return
        
Switch switches you into the body of another character (who must not
already have a descriptor, e.g. you can't switch into a PC). You also cannot
switch into link-dead PCs.

Return returns you to your original body.
~
78 IMMTALK :~
Syntax: immtalk <message>
        immtalk
        
Immtalk sends a message to all immortals.  : is a synonym for immtalk.
Using this command with no argument turns off the immortal channel (or
turns it back on).
~
78 WIZNET~
Syntax: wiznet
        wiznet show
        wiznet status
        wiznet <field>
        
Wiznet is sort of an immortal news service, to show important events to
the wiznetted immoral.  Wiznet by itself turns wiznet on and off,
wiznet show lists all settable flags (they are not detailed here),
wiznet status shows your current wiznet settings, and wiznet <field> toggles
a field on and off.  The events should be self-explanatory, if they are not,
fiddle with them a while.  More events are available at higher levels.
~
78 WIZHELP~
Syntax: wizhelp

Wizhelp provides a list of all the immortal commands.
~
78 'OLC EDIT'~
Syntax: EDIT AREA(aedit) [create/reset] [vnum]- Area Creation and Repoping.
Syntax: EDIT ROOM(redit) ( [create] [vnum] )- Room Creation and Editing.   
Syntax: EDIT OBJ(oedit)  [create] <vnum>- Object Creation and Editing.     
Syntax: EDIT MOB(medit)  [create] <vnum>- Mobile Creation and Editing.     
Syntax: EDIT MP   [create] <vnum>               - MobProg Creation/Editing.

Syntax: ASAVE  <world/area/changed/list>- Save Editing to Disk.
Syntax: ALIST                                   - Listing of Areas.
Syntax: RESET  See Help Resets.- Set Game Resets.

Definition: [optional]  <required>  (combined arguments)

     The above commands are used to expand the game world.  The original
code is based on was written by Surreality and installed in The Isles by Locke.
It was then converted to work with Envy by Jason Dinkel, and ported to ROM
2.3 by Hans Birkeland (Hugin). Port to Rom 2.4 by Ivan Toledo (ver 1.8).  

     Inside an editor, typing COMMANDS lists working commands and ? gives
help. AEDIT and REDIT default to the current area or room. EDIT ROOM RESET
resets the current room.  Most commands with no arguments display syntax. 

See also help: AEDITOR REDITOR MEDITOR OEDITOR
~
78 'ALIST'~
Syntax: ALIST

This command gives you a listing of all the areas along with their
vnum assignments and the builder(s) assigned to editing them.
~
78 'AEDIT'~
Syntax: AEDIT            -Enters the editor for the current area.
Syntax: AEDIT     <vnum> -Enters the editor for the selected area.

The follow commands are available from within the AEDITOR:

age <number>        - set the age of the area
builder <player>    - toggle that builder's access
commands            - prints a list of possible commands
create              - create a brand new area and switch to it
done                - exits the area editor and returns to normal play
filename <filename> - change the file name for the area (be careful)  
name <name>         - change the 'AREAS' name of this area
reset               - resets the current area
security <rating>   - set the security rating for this area
show                - hitting return, or 'show' shows the area stats
vnum <lower> <upper>- set the lower and upper vnum's
lvnum <lower>       - set the lower vnum
uvnum <upper>       - set the upper vnum
<flags>             - area flags, type ? AREA for a list
~
78 REDITOR~
Syntax: EDIT ROOM (REDIT) -Enters the editor for the current room.

The following commands are available from within the REDITOR:
commands            - prints a list of possible commands
create <vnum>       - creates a room with a certain vnum
desc                - edit description of room
done                - exists the room editor and returns to normal play
ed                  - type this command for additonal extra-description help
format              - format(wordwrap) the room description
name <room title>   - changes the room title
show                - hitting return, or 'show' shows the room stats
oshow <vnum>        - shows an object with given vnum
olist               - lists objects in this area.
mshow <vnum>        - shows a mobile with given vnum
mlist               - lists mobiles in this area.   
room <flags>        - room attributes, type ? ROOM for a list
sector <type>       - terrain of room, type ? SECTOR for a list
<direction>         - see help EXIT, or type <dir> ?

~
78 'REDIT EXITS'~
For exits, type the direction (north/s/e/w) followed by:

dig <vnum>         - creates the room and makes a two way link
link <room vnum>   - make a two way link
room <room vnum>   - make a one way link (use with caution)
key <object vnum>  - makes specified object the vnum of the key required
name <door name>   - makes the door's name/keywords = to the given name 
desc               - edit the description of the exit
delete             - delete this exit
<exit-flags>       - type ? EXIT for a list(make exit door, locked etc.)

The exit flags are presented in the following manner.  The capitalized
flags are ones not included in the reset info.  i.e. closed is due to 
a player closing the door and not due to the door being set to be closed.

-South to [ 3744] Key: [   -1] Exit flags: [door CLOSED bashed pickproof]
~
78 OEDITOR~
Syntax: edit object <vnum>-Enters the editor for the selected object.

The following commands are available from within the OEDITOR:
addaffect           - applies an affect to an object, no args for help
delaffect           - removes an affect to an object, no args for help
commands            - prints a list of possible commands
cost <gold>         - sets the gold value of the object 
create <vnum>       - creates object with specified vnum
done                - exits the object editor and returns to normal play
ed                  - type this for info on adding/editing extended descripts
long                - edit long description (the one in the room)
name <keywords>     - sets the keywords on an object
short <desc>        - sets the 'name' of an object (a sword, a fish etc)
show                - hitting return, or 'show' shows the object stats  
v0 <num>            - sets the value '0' on the object
v1 <num>            - sets the value '1' on the object
v2 <num>            - sets the value '2' on the object
v3 <num>            - sets the value '3' on the object
v4 <num>            - sets the value '4' on the objcet
weight <num>        - sets the weight of the object   
type                - type of object, type ? TYPE for a list
extra               - attributes of object, type ? EXTRA for a list
wear                - where object is worn, type ? WEAR for a list 
material            - material the object is made from
~
78 MEDITOR~
Syntax: medit <vnum>-Enters the editor for the selected mobile.

The following commands are available from within the MEDITOR:
alignment <value>   - set the mobile's alignment
commands            - prints a list of possible commands
create <vnum>       - creates mobile with specified vnum
desc                - edit the mobile's description (when looked at)
done                - exits the mobile editor and returns to normal play
level <level>       - set the mobile's level
long                - edit long description (the one in the room)
name <keywords>     - sets the keywords on an mobile
shop                - type this command for further information
short <desc>        - sets the 'name' of an mobile (a sword, a fish etc)
show                - hitting return, or 'show' shows the mobile stats  
spec                - sets a mobiles spec proc, type ? SPEC for a list  
sex                 - set the mobile's sex, type ? SEX for a list
act                 - mobiles actions, type ? ACT for a list
affect              - mobile affects, type ? AFFECT for a list
ac                  - set the mobile's ac, type ? AC for a list
form                - mobiles body-form, type ? FORM for a list
part                - mobiles bodyparts, type ? PART for a list
imm                 - mobile is immune to, type ? IMM for a list
res                 - mobile is resistant to, type ? RES for a list
vuln                - mobile is vulnerable to, type ? VULN for a list
material            - material mobile is made from, type ? MATERIAL for a list
off                 - offensive behaviour, type ? OFF for a list
size                - size, type ? SIZE for a list
hitdice             - dice to toss to get mobile's hitpoints
manadice            - dice to toss to get mobile's mana
damdice             - dice to toss to get mobile's hand to hand damage

type 'help HITDICE', 'help MANADICE', 'help DAMDICE' for lists of reasonable dice
combinations on different levels.
~
78 'RESETS'~
Syntax:
RESET <number> OBJ <vnum> <location on body>    - equips last mobile
RESET <number> OBJ <vnum> inside <obj vnum>     - store in container
RESET <number> OBJ <vnum> room                  - store in room
RESET <number> MOB <vnum> [<max #>]             - load a mobile
RESET <number> DELETE                           - delete a reset

RESET alone will display the resets in the current room.  The <number> will
be displayed with this list.  Typing ? WEAR-LOC will list possible locations
that an object can be loaded to.  The [<max #>] is the maximum number of
mobiles allowed in this room and will default to 1 if no number is entered.

For resets to be successful make sure that you add them in a logical order.
For example if you are equiping a mobile don't load a container in the room
and fill it with some objects and then continue equiping the mobile.  It is
likely that resets will backfire if they are not carefully entered.

If you wish to reset the room then use EDIT ROOM RESET.
~
78 'ITEM_LIST'~
value 0    unused
value 1    unused
value 2    hours of light available, 0 is dead, -1 or 999 is infinite
value 3    unused
value 4    unused
~
78 ITEM_STAFF_WAND~
value 0    level   
value 1    max charges
value 2    current charges
value 3    spell name
value 4    unused

An up-to-date list of spells can be obtained by typing:
? SPELLS [ignore/attack/defend/self/object/all]
~
78 ITEM_SCROLL_POTION_PILL~
value 0    level
value 1    spell name 1
value 2    spell name 2
value 3    spell name 3
value 4    unused

An up-to-date list of spells can be obtained by typing:
? SPELLS [ignore/attack/defend/self/object/all]
~
78 ITEM_ARMOR~
value 0    ac pierce
value 1    ac bash  
value 2    ac slash 
value 3    ac exotic (magic)
value 4    unused
~
78 ITEM_WEAPON~
value 0    weapon class.
value 1    number of dice to roll.
value 2    type of dice to roll.  
value 3    weapon type.
value 4    special weapon type.

An up-to-date list of values can be obtained by typing

? WCLASS
help WEAPON_DICE
? WEAPON
? WTYPE 
~
78 WEAPON_DICE~
These are the values the server generates automatically when
converting a merc-format mobile to ROM format.  A higher
number of dice gives less variance in damage.  There is no
dice-bonus on weapon dice.

level: dice
1: 1d8
2: 2d5
3: 2d5
5: 2d6
10: 4d5
20: 5d5
30: 5d7
50: 5d11
~
78 ITEM_CONTAINER~
value 0    weight capacity
value 1    flags: closeable, pickproof, closed, locked
value 2    key vnum
value 3    unused  
value 4    unused  


An up-to-date list of flags can be obtained by typing
? CONTAINTER
~
78 ITEM_DRINK~
value0 capacity
value 1    current quantity
value 2    liquid type
value 3    poisoned?  
value 4    unused     

An up-to-date list of liquid types can be obtained by typing
? LIQUID
~
78 ITEM_FOOD~
value 0    hours of food value
value 1    unused
value 2    unused
value 3    poisoned?
value 4    unused   
~
78 ITEM_MONEY~
value 0    value in gold pieces
value 1    unused
value 2    unused
value 3    unused
value 4    unused
~
78 MANADICE~
A high number of dice makes for less variance in mobiles mana.
The values the server generates for merc-type mobs is

<level> d 10 + 100

where level is the level of the mobile.
~
78 MOB_AC~
The values ROM generates for a merc format mob is:

Level....Pierce....Bash....Slash...Exotic
1...........95.......95.......95......95 
5...........70.......70.......70......85 
10..........40.......40.......40......70 
15...........5....... 5........5......55 
20.........-25......-25......-25......40 
25.........-55......-55......-55......20 
30.........-90......-90......-90.......5 
35........-120.....-120.....-120.....-10 
40........-150.....-150.....-150.....-25 
45........-180.....-180.....-180.....-40 
50........-215.....-215.....-215.....-55 
55........-245.....-245.....-245.....-70 
60........-275.....-275.....-275.....-90 
65........-305.....-305.....-305....-105 
70........-340.....-340.....-340....-120 
80........-400.....-400.....-400....-150 

These values are 10 times what you would put in an area file. This
is because the server multiplies what it reads from file with 10. 
~
78 DAMDICE~
A high number of dice makes for less variance in mobiles hitpoints.

Suggested values are:

Level......dice.......min......min....mean
1..........1d2+0.......1........2.......2 
2..........1d2+1.......2........3.......3 
3..........1d3+2.......3........5.......4 
5..........2d3+2.......4........8.......6 
10.........2d5+5.......7.......15......11 
15.........3d5+8......11.......23......17 
20.........4d5+10.....14.......30......22 
30.........5d6+15.....20.......45......33 
50.........5d10+25....30.......75......53 

Mean is the arithmetic mean.  The values in parenthesis are the the
standard merc values.  (Will be put in when there's time to calculate
them...)
~
78 HITDICE~
A high number of dice makes for less variance in mobiles hitpoints.
Suggested values are:

level:.....dice.........min.........max........mean
1:........1d2+6.......7( 7 ).....8(   8).....8(   8)
2:........1d3+15.....16( 15)....18(  18)....17(  17)
3:........1d6+24.....25( 24)....30(  30)....27(  27)
5:........1d17+42....43( 42)....59(  59)....51(  51)
10:......3d22+96.....99( 95)...162( 162)...131( 129)
15:......5d30+161...166(159)...311( 311)...239( 235)
30:.....10d61+416...426(419)..1026(1026)...726( 723)
50:....10d169+920...930(923)..2610(2610)..1780(1767)

Diff = max - min.  Mean is the arithmetic mean.
The values in parenthesis are the the standard merc values.
~
78 HEDIT~
Syntax: hedit <keyword>     - edits an existing helpfile
        invent <keyword>    - creates a new helpfile keyword
        text                - enters text editor to add text
        .h (in text editor) - lists formating options within text editor
~

-1 $~

#$

